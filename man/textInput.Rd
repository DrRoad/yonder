% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/textual.R
\name{textInput}
\alias{textInput}
\alias{updateTextInput}
\alias{groupTextInput}
\alias{updateGroupTextInput}
\alias{searchInput}
\alias{updateSearchInput}
\alias{emailInput}
\alias{updateEmailInput}
\alias{urlInput}
\alias{updateUrlInput}
\alias{telephoneInput}
\alias{updateTelephoneInput}
\alias{passwordInput}
\alias{updatePassowrdInput}
\alias{numberInput}
\alias{updateNumberInput}
\title{Textual inputs}
\usage{
textInput(id, value = NULL, placeholder = NULL, ...)

updateTextInput(id, value = NULL, enable = NULL, disable = NULL,
  valid = NULL, invalid = NULL, session = getDefaultReactiveDomain())

groupTextInput(id, value = NULL, placeholder = NULL, ...,
  left = NULL, right = NULL)

updateGroupTextInput(id, value = NULL, enable = NULL, disable = NULL,
  valid = NULL, invalid = NULL, session = getDefaultReactiveDomain())

searchInput(id, value = NULL, placeholder = NULL, ...)

updateSearchInput(id, value = NULL, enable = NULL, disable = NULL,
  valid = NULL, invalid = NULL, session = getDefaultReactiveDomain())

emailInput(id, value = NULL, placeholder = NULL, ...)

updateEmailInput(id, value = NULL, enable = NULL, disable = NULL,
  valid = NULL, invalid = NULL, session = getDefaultReactiveDomain())

urlInput(id, value = NULL, placeholder = NULL, ...)

updateUrlInput(id, value = NULL, enable = NULL, disable = NULL,
  valid = NULL, invalid = NULL, session = getDefaultReactiveDomain())

telephoneInput(id, value = NULL, placeholder = NULL, ...)

updateTelephoneInput(id, value = NULL, enable = NULL, disable = NULL,
  valid = NULL, invalid = NULL, session = getDefaultReactiveDomain())

passwordInput(id, value = NULL, placeholder = NULL, ...)

updatePassowrdInput(id, value = NULL, enable = NULL, disable = NULL,
  valid = NULL, invalid = NULL, session = getDefaultReactiveDomain())

numberInput(id, value = NULL, placeholder = NULL, ...)

updateNumberInput(id, value = NULL, enable = NULL, disable = NULL,
  valid = NULL, invalid = NULL, session = getDefaultReactiveDomain())
}
\arguments{
\item{id}{A character string specifying the id of the reactive input.}

\item{value}{A character string or a value coerced to a character string
specifying the default value of the textual input.}

\item{placeholder}{A character string specifying placeholder text for the
input, defaults to \code{NULL}, in which case there is no placeholder text.}

\item{...}{Additional named arguments passed as HTML attributes to the parent
element.}

\item{left}{A character vector specifying static addons or
\code{\link[=buttonInput]{buttonInput()}} or \code{\link[=dropdown]{dropdown()}} elements specifying dynamic addons. Addons
affect the reactive value of the group input, see the Details section below
for more information.

\strong{\code{left} is character or \code{right} is character}

If \code{left} or \code{right} are character vectors, then the group input functions
like a text input. The value will update and trigger a reactive event when
the text box is modified. The group input's reactive value is the
concatention of the static addons specified by \code{left} or \code{right} and the
value of the text input.

\strong{\code{left} is button or \code{right} is button}

The button does not change the value of the group input. However, the input
no longer triggers event when the text box is updated. Instead the value is
updated when a button is clicked. Static addons are still applied to the
group input value.

\strong{\code{left} is a dropdown or \code{right} is a dropdown}

The value of the group input does chance depending on the clicked dropdown
menu item. The value of the input group is the concatentation of the
dropdown input value, the value of the text input, and any static addons.}

\item{right}{A character vector specifying static addons or
\code{\link[=buttonInput]{buttonInput()}} or \code{\link[=dropdown]{dropdown()}} elements specifying dynamic addons. Addons
affect the reactive value of the group input, see the Details section below
for more information.

\strong{\code{left} is character or \code{right} is character}

If \code{left} or \code{right} are character vectors, then the group input functions
like a text input. The value will update and trigger a reactive event when
the text box is modified. The group input's reactive value is the
concatention of the static addons specified by \code{left} or \code{right} and the
value of the text input.

\strong{\code{left} is button or \code{right} is button}

The button does not change the value of the group input. However, the input
no longer triggers event when the text box is updated. Instead the value is
updated when a button is clicked. Static addons are still applied to the
group input value.

\strong{\code{left} is a dropdown or \code{right} is a dropdown}

The value of the group input does chance depending on the clicked dropdown
menu item. The value of the input group is the concatentation of the
dropdown input value, the value of the text input, and any static addons.}
}
\description{
Different types of textual inputs are provided to best support mobile
keyboards and assistive technologies. A password input will mask its
contents. Email inputs offer client-side validation depending on the browser.
}
\examples{

### Basic text

textInput(id = "text")

### Search

searchInput(id = "search")

### Email

emailInput(id = "email")

### URLs

urlInput(id = "url")

### Telephone numbers

telephoneInput(id = "tele")

### Passwords

passwordInput(id = "password")

### Numbers

numberInput(id = "num")

}
\seealso{
Other inputs: \code{\link{buttonGroupInput}},
  \code{\link{buttonInput}}, \code{\link{checkboxInput}},
  \code{\link{chipInput}}, \code{\link{fileInput}},
  \code{\link{formInput}}, \code{\link{listGroupInput}},
  \code{\link{menuInput}}, \code{\link{navInput}},
  \code{\link{radioInput}}, \code{\link{rangeInput}},
  \code{\link{selectInput}}, \code{\link{sliderInput}}
}
\concept{inputs}
