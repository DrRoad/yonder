% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list-group.R
\name{listGroupThruput}
\alias{listGroupThruput}
\alias{listGroupItem}
\alias{renderListGroup}
\title{List group thruputs}
\usage{
listGroupThruput(id, flush = FALSE, ...)

listGroupItem(..., value = NULL, selected = FALSE, disabled = FALSE)

renderListGroup(..., env = parent.frame(), quoted = FALSE)
}
\arguments{
\item{id}{A character vector specifying the reactive id of the list group
thruput.}

\item{...}{For \code{listGroupThruput}, additional named arguments passed on as
HTML attributes to the parent list group element.

For \code{listGroupItem}, the text or HTML content of the list group item.

For \code{renderListGroup}, any number of expressions which return a
\code{listGroupItem} or calls to \code{listGroupItem}.}

\item{value}{A character string specifying the value of the list group item,
defaults to \code{NULL}, in which case the list group item has no value. List
group items without a value are not actionable, i.e. they cannot be
selected.}

\item{selected}{\code{TRUE} or \code{FALSE} specifying if the list group item is
selected by default, defaults to \code{FALSE}.}

\item{disabled}{\code{TRUE} or \code{FALSE} specifying if the list group item can be
selected, defaults to \code{FALSE}.}
}
\description{
A way of handling and outlining content as a list. List groups function
similarly to checkbox groups. A list group returns a reactive vector of
values from its active (selected) list group items. List group items are
selected or unselected by clicking on them.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          default = 3,
          listGroupThruput(
            id = "thrulist"
          )
        ),
        col(
          rangeInput(
            id = "num",
            min = 0,
            max = 20,
            step = 2
          ),
          sliderInput(
            id = "level",
            choices = c("danger", "warning", "success", "info"),
            values = c("red", "orange", "green", "cyan")
          )
        )
      )
    ),
    server = function(input, output) {
      observe({
        print(input$level)
      })

      output$thrulist <- renderListGroup(
        listGroupItem(
          "Cras justo odio",
          badgeOutput("badge1", 0) \%>\%
            background(input$level)
        ) \%>\%
          display("flex") \%>\%
          content("between") \%>\%
          items("center"),
        listGroupItem(
          "Dapibus ac facilisis in",
          badgeOutput("badge2", 0) \%>\%
            background(input$level)
        ) \%>\%
          display("flex") \%>\%
          content("between") \%>\%
          items("center")
      )

      output$badge1 <- renderBadge(input$num)
      output$badge2 <- renderBadge(input$num)
    }
  )
}

}
\seealso{
Boostrap 4 list group documentation:
\url{https://getbootstrap.com/docs/4.0/components/list-group/}
}
