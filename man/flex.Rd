% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flex.R
\name{flex}
\alias{flex}
\title{Flex layout}
\usage{
flex(tag, direction = NULL, reverse = NULL, justify = NULL,
  align = NULL, wrap = NULL)
}
\arguments{
\item{tag}{A tag element.}

\item{direction}{A \link{responsive} argument. One of \code{"row"} or \code{"column"}
specifying the placement of flex items, defaults to \code{NULL}. If \code{"row"}
items are placed vertically, if \code{"column"} items are placed horizontally.
Browsers place items vertically by default.}

\item{reverse}{A \link{responsive} argument. One of \code{TRUE} or \code{FALSE} specifying
if flex items are placed in reverse order, defaults to \code{NULL}. If \code{TRUE}
items are placed from right to left when \code{direction} is \code{"row"} or bottom
to top when \code{direction} is \code{"column"}.}

\item{justify}{A \link{responsive} argument. One of \code{"start"}, \code{"end"},
\code{"center"}, \code{"between"}, or \code{"around"} specifying how items are
horizontally aligned, defaults to \code{NULL}. See the \strong{justify} section below
for more on how the different values affect horizontal spacing.}

\item{align}{A \link{responsive} argument. One of \code{"start"}, \code{"end"}, \code{"center"},
\code{"baseline"}, or \code{"stretch"} specifying how items are vertically aligned,
defaults to \code{NULL}. See the \strong{align} section below for more on how the
different values affect vertical spacing.}

\item{wrap}{A \link{responsive} argument. One of \code{TRUE} or \code{FALSE} specifying
whether to wrap flex items inside the flex containter, \code{tag}, defaults
to \code{NULL}. If \code{TRUE} items wrap inside the container, if \code{FALSE} items will
not wrap. See the \strong{wrap} section below for more.}
}
\description{
Use \code{flex()} to control how a flex container tag element places its flex
items or child tag elements. For more on turning a tag element into a flex
container see \code{\link[=display]{display()}}. By default tag elements within a flex container
are treated as flex items.
}
\section{\code{direction}}{


Because horizontal placement the browser default you may not often use
\code{flex(.., direction = "row")}.  The responsive arguments are potentially more
useful as shown in the following example. On small screens the flex items are
placed vertically and can occupy the full width of the mobile device. On
medium or larger screens the items are placed horizontally once again.\preformatted{div(
  div("A flex item") \%>\%
    padding(3) \%>\%
    border(),
  div("A flex item") \%>\%
    padding(3) \%>\%
    border(),
  div("A flex item") \%>\%
    padding(3) \%>\%
    border()
) \%>\%
  display("flex") \%>\%
  flex(
    direction = list(xs = "column", md = "row")
  ) \%>\%
  background("grey") \%>\%
  border()
}

Here is a simpler example of a flex container with its children placed into
columns.\preformatted{div(
  div("A flex item") \%>\%
    padding(3) \%>\%
    border(),
  div("A flex item") \%>\%
    padding(3) \%>\%
    border(),
  div("A flex item") \%>\%
     padding(3) \%>\%
     border()
) \%>\%
  display("flex") \%>\%
  flex(direction = "column")
}
}

\section{\code{justify}}{


Below you can see how the possible \code{justify} values change the horizontal
spacing of items within a flex container element.

\code{"start"}

\code{| Item 1 | Item 2 | Item 3 | ================= |}

\code{"end"}

\code{| ================= | Item 1 | Item 2 | Item 3 |}

\code{"center"}

\code{| ======= | Item 1 | Item 2 | Item 3 | ======= |}

\code{"between"}

\code{| Item 1 | ======= | Item 2 | ======= | Item 3 |}

\code{"around"}

\code{| == | Item 1 | == | Item 2 | == | Item 3 | == |}
}

\section{\code{align}}{


Below you can see how the possible \code{align} values change the vertial spacing
of items within a flex container element.

\strong{\code{"start"}}\preformatted{| Item 1 | Item 2 | Item 3 | ================== |
|        |        |        |                    |
|        |        |        |                    |
}

\strong{\code{"end"}},\preformatted{|        |        |        |                    |
|        |        |        |                    |
| Item 1 | Item 2 | Item 3 | ================== |
}

\strong{\code{"center"}}\preformatted{|        |        |        |                    |
| Item 1 | Item 2 | Item 3 | ================== |
|        |        |        |                    |
}

\strong{\code{"baseline"}}\preformatted{| Item 1 | Item 2 | Item 3 | ================== |
|        |        |        |                    |
|        |        |        |                    |
}

\strong{\code{"stretch"}}\preformatted{| It     | It     | It     | ================== |
|   em   |   em   |   em   |                    |
|      1 |      2 |      3 |                    |
}
}

\section{\code{wrap}}{


\strong{\code{FALSE}}\preformatted{| Item | Item | Item | Item | Item | Item |
| 1    | 2    | 3    | 4    | 5    | 6    |
}

\strong{\code{TRUE}}\preformatted{| Item 1 | Item 2 | Item 3 | Item 4 | === |
| Item 5 | Item 6 | ===================== |
}
}

\examples{

}
\seealso{
Other layout: \code{\link{column}}, \code{\link{fieldset}},
  \code{\link{formGroup}}, \code{\link{navbar}},
  \code{\link{tabTabs}}
}
\concept{layout}
