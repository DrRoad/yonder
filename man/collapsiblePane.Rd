% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collapse.R
\name{collapsiblePane}
\alias{collapsiblePane}
\alias{collapsePane}
\alias{expandPane}
\alias{togglePane}
\title{Collapsible sections}
\usage{
collapsiblePane(id, ..., show = TRUE)

collapsePane(id, session = getDefaultReactiveDomain())

expandPane(id, session = getDefaultReactiveDomain())

togglePane(id, session = getDefaultReactiveDomain())
}
\arguments{
\item{id}{A character string specifying the id of the collapsible pane. Pass
this id to the \code{hideCollapse()}, \code{showCollapse()}, or \code{toggleCollapse()}
to change the state of a collapsible pane.}

\item{...}{Tag elements inside the collapsible pane or additional named
arguments passed as HTML attributes to parent element.}
}
\description{
The \code{collapsible()} function wraps a tag element in a collasible div
element. The state of the element, shown or hidden, is toggled using
\code{hideCollapse()}, \code{showCollapse()}, and \code{toggleCollapse()}.
}
\details{
Padding may not be applied to the collapsible pane div element. To pad a
collapsible pane first wrap the pane in another element and add padding to
this new element.
}
\section{App with collapse}{
\preformatted{ui <- container(
  buttonInput(
    id = "demo",
    label = "Toggle collapse"
  ),
  collapsiblePane(
    id = "collapse",
    p(
      "Pellentesque condimentum, magna ut suscipit hendrerit, ",
      "ipsum augue ornare nulla, non luctus diam neque sit amet urna."
    ),
    p(
      "Praesent fermentum tempor tellus.  Vestibulum convallis, ",
      "lorem a tempus semper, dui dui euismod elit, vitae placerat ",
      "urna tortor vitae lacus."
    )
  )
)

server <- function(input, output) {
  observeEvent(input$demo, {
    togglePane("collapse")
  })
}

shinyApp(ui, server)
}
}

\examples{

# Please see live examples

}
\seealso{
Other utilities: \code{\link{downloadEvent}},
  \code{\link{markInvalid}}, \code{\link{updateChoices}}
}
\concept{utilities}
