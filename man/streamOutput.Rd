% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stream.R
\name{streamOutput}
\alias{streamOutput}
\alias{sendStream}
\title{Stream notifications}
\usage{
streamOutput(id, ...)

sendStream(id, content, session = getDefaultReactiveDomain())
}
\arguments{
\item{id}{A character string specifying the id of the stream output.}

\item{...}{Additional named arguments passed as HTML attributes to the
parent element.}

\item{content}{A character string specifying the message text.}

\item{session}{A \code{session} object passed to the shiny server function,
defaults to \code{\link[=getDefaultReactiveDomain]{getDefaultReactiveDomain()}}.}
}
\description{
The stream output is used to send updates to the user during long-running
processes. Unlike conventional reactive outputs, the stream output does not
have a render function instead messages are sent with \code{sendStreamMessage}.
This allows message to "render" during long-running observers or other
processes.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      row(
        column(
          buttonInput(id = "trigger", "Go!")
        ),
        column(
          streamOutput(
            id = "stream"
          )
        )
      )
    ),
    server = function(input, output, session) {
      observeEvent(input$trigger, {
        for (i in seq_len(5)) {
          sendStream(
            id = "stream",
            content = paste("Update:", i)
          )
          Sys.sleep(1)
        }
      })
    }
  )
}

}
