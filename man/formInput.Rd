% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forms.R
\name{formInput}
\alias{formInput}
\title{Form inputs}
\usage{
formInput(id, ..., submit = buttonInput(NULL, "Submit"),
  inline = FALSE)
}
\arguments{
\item{id}{A character string specifying the id of the reactive input.}

\item{...}{Any number of unnamed arguments (inputs or tag elements) passed as
child elements to the form.

Additional named arguments passed as HTML attributes to the parent element.}

\item{submit}{A button input, when clicked the form input will update its
reactive child inputs, defaults to \code{buttonInput(NULL, "Submit")}.}

\item{inline}{One of \code{TRUE} or \code{FALSE}, if \code{TRUE} the form and its child
elements are rendered in a horizontal row, defaults to \code{FALSE}. On small
viewports, think mobile device, \code{inline} intentionally has no effect and
the form will span multiple lines.}
}
\description{
Form inputs are a new reactive input. Form inputs are an alternative to
shiny's submit buttons. A form input is comprised of any number of
inputs. The value of these inputs will not change until the form input's
submit input is clicked. A form input's reactive value also depends on the
submit input. This allows you to distinguish between different clicks if
your form includes multiple submit inputs.

A submit input is a special type of button used to control form input
submission. Because of their specific usage, submit inputs do not require an
\code{id}, but may have a specified \code{value}. Submit inputs will \emph{not} freeze all
reactive inputs, see \code{\link[=formInput]{formInput()}}.

If \code{id} or \code{submit} are \code{NULL} the form input will not freeze its child
inputs.
}
\details{
When \code{inline} is \code{TRUE} you may want to adjust the right margin of each child
element for viewports larger than mobile, \code{margin(<TAG>, right = c(sm = 2))},
more information at \code{\link[=margin]{margin()}}. You only need to apply extra space for larger
viewports because inline forms do not take effect on small viewports.
}
\section{Frozen inputs with scope}{
\preformatted{ui <- container(
  formInput(
    id = "form",
    formGroup(
      label = "Email",
      emailInput(
        id = "email"
      )
    ),
    formGroup(
      label = "Password",
      passwordInput(
        id = "password"
      )
    )
  )
)

server <- function(input, output) { }

shinyApp(ui, server)
}
}

\examples{

### A simple form

card(
  header = "Please pick a flavor",
  formInput(
    id = "form1",
    formGroup(
      label = "Ice creams",
      radioInput(
        id = "flavorChoice",
        choices = c("Mint", "Moose tracks", "Marble"),
      )
    ),
    submit = buttonInput(  # <-
      id = "submi1",
      label = "Make choice"
    ) \%>\%
      background("teal")
  )
) \%>\%
  border("teal") \%>\%
  width(50)

}
\seealso{
Other inputs: \code{\link{buttonGroupInput}},
  \code{\link{buttonInput}}, \code{\link{checkbarInput}},
  \code{\link{checkboxInput}}, \code{\link{chipInput}},
  \code{\link{fileInput}}, \code{\link{listGroupInput}},
  \code{\link{menuInput}}, \code{\link{navInput}},
  \code{\link{radioInput}}, \code{\link{radiobarInput}},
  \code{\link{rangeInput}}, \code{\link{selectInput}},
  \code{\link{textInput}}
}
\concept{inputs}
