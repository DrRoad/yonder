% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/popover.R
\name{showPopover}
\alias{showPopover}
\alias{closePopover}
\title{Display a popover}
\usage{
showPopover(id, content, title = NULL, placement = "top", duration = 4)

closePopover(id)
}
\arguments{
\item{id}{A character string specifying the HTML id of a popover's target tag
element.}

\item{content}{A character string or tag element specifying the content of
the popover.}

\item{title}{A character string specifying a title for the popover, defaults
to \code{NULL}, in which case a title is not added.}

\item{placement}{One of \code{"top"}, \code{"left"}, \code{"bottom"}, or \code{"right"}
specifying where the popover is positioned relative to the target tag
element indicated by \code{id}.}

\item{duration}{A positive integer specifying the duration of the popover
in seconds or \code{NULL}, in which case the popover is not automatically
removed. When \code{NULL} is specified the popover can be removed with
\code{closePopover()}.}
}
\description{
Popovers are small windows of content associated with a tag element. Use
\code{howPopover()} to add a popover to any tag element with an HTML id. This
allows you to add explanations for inputs. Furthermore the \code{\link[=linkInput]{linkInput()}}
makes explanations of semi-plain text possible. Popovers are hidden with
\code{closePopover()}.
}
\examples{

if (interactive()) {
  shinyApp(
    ui = container(
      buttonInput("click", "Button"),
      buttonInput("close", icon("times")) \%>\%
        background("red")
    ),
    server = function(input, output) {
      observeEvent(input$click, {
        showPopover(
          id = "click",
          text = "This is a button!",
          placement = "bottom",
          duration = NULL
        )
      })

      observeEvent(input$close, {
        closePopover("click")
      })
    }
  )
}

}
