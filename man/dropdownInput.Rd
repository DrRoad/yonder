% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dropdown.R
\name{dropdownInput}
\alias{dropdownInput}
\title{Dropdown input}
\usage{
dropdownInput(id, label, ..., direction = "down", split = FALSE)
}
\arguments{
\item{id}{A character string specifying the id of the dropdown input.}

\item{label}{A character string specifying the label of the dropdown's
button.}

\item{...}{Character strings or vectors, header tag elements, button inputs,
or form inputs specifying the elements of the dropdown. These elements may
be grouped into lists, in which case menu dividers are placed before,
after, or between the lists of elements. \code{h6()} is the recommended heading
level for menu headers. Character vectors are converted into paragraphs of
text. To format menu text use \code{p()} and any utility functions instead.
Named arguments are passed HTML attributes to the parent element.}

\item{direction}{One of \code{"up"}, \code{"right"}, \code{"down"}, or \code{"left"} specifying
the direction in which the menu opens, defaults to \code{"down"}.}

\item{split}{One of \code{TRUE} or \code{FALSE} specifying if the dropdown toggle button
is split into two distinct buttons, defaults to \code{FALSE}. This is a stylistic
modification which properly spaces the dropdown toggle icon and aligns the
dropdown menu to the toggle icon.}
}
\description{
Dropdown inputs, or dropdown menus, a similar to form inputs. The dropdown
input has no value per say, but acts as an intelligent container for button
and form inputs.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      row(
        column(
          dropdownInput(
            id = NULL,
            label = "Dropdown",
            split = TRUE,
            formInput(
              id = NULL,
              submit = NULL,
              textInput(
                id = "email",
                placeholder = "email@example.com"
              ),
              textInput(
                id = "password",
                placeholder = "Password"
              )
            ) \%>\%
              padding(3),
            list(
              buttonInput(
                id = "signup",
                label = "New? Sign up"
              ),
              buttonInput(
                id = "forgot",
                label = "Forgot password?"
              )
            )
          )
        ),
        column(
          verbatimTextOutput("values")
        )
      )
    ),
    server = function(input, output) {
      output$values <- renderPrint(
        list(
          email = input$email,
          password = input$password,
          signup = input$signup,
          forgot = input$forgot
        )
      )
    }
  )
}

}
\seealso{
Other inputs: \code{\link{buttonGroupInput}},
  \code{\link{buttonInput}}, \code{\link{checkbarInput}},
  \code{\link{checkboxInput}}, \code{\link{dateInput}},
  \code{\link{fileInput}}, \code{\link{formInput}},
  \code{\link{groupInput}}, \code{\link{listGroupThruput}},
  \code{\link{radioInput}}, \code{\link{rangeInput}},
  \code{\link{selectInput}}, \code{\link{textInput}}
}
\concept{inputs}
