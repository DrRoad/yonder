% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datetime.R
\name{dateInput}
\alias{dateInput}
\alias{dateRangeInput}
\title{Date time input}
\usage{
dateInput(id, value = NULL, min = NULL, max = NULL, multiple = FALSE)

dateRangeInput(id, value = NULL, min = NULL, max = NULL)
}
\arguments{
\item{id}{A character specifying the id of the datetime input.}

\item{value}{The default value of the input, defaults to \code{NULL}, in which
case the initial value is \code{NULL}.}

\item{min, max}{Date objects or character strings in the format \code{YYYY-mm-dd}
specifying the minimum and maximum date that can be selecetd, both
default to \code{NULL} in which case there is no minimum or maximum value
respectively.}

\item{multiple}{\code{TRUE} or \code{FALSE} specifying whether multiple dates may be
selected, if \code{TRUE} the user may select multiple dates and a vector of
one or more dates is returned as the reactive value.}
}
\description{
A date time picker. Alternatively, use the date time range picker to select
a range of dates. The value of the date range picker is always two dates.
}
\examples{
# date input ----
if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          h6("Single date input:"),
          dateInput(
            id = "datetime"
          ),
          h6("Multiple dates input:") \%>\%
            margins(c(3, 0, 2, 0)),
          dateInput(
            id = "datemult",
            multiple = TRUE
          )
        ),
        col(
          verbatimTextOutput("values")
        )
      )
    ),
    server = function(input, output) {
      output$values <- renderPrint({
        list(
          single = input$datetime,
          multiple = input$datemult
        )
      })
    }
  )
}

# date range input ----
if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          dateRangeInput(
            id = "daterange",
            value = c(Sys.Date(), Sys.Date() + 3)
          )
        ),
        col(
          verbatimTextOutput("values")
        )
      )
    ),
    server = function(input, output) {
      output$values <- renderPrint({
        input$daterange
      })
    }
  )
}

}
