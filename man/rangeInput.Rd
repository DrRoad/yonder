% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/range.R
\name{rangeInput}
\alias{rangeInput}
\title{A range or slider input}
\usage{
rangeInput(id, min = 0, max = 100, step = 1, length = NULL,
  default = NULL, labels = NULL, context = NULL, size = NULL,
  track = NULL, thumb = NULL)
}
\arguments{
\item{id}{A character string specifying the id of the range input.}

\item{min}{The minimum value of the range.}

\item{max}{The maxmium value of the range.}

\item{step}{Controls possible values, the value of the range input is always
a multiple of \code{step}. Defaults to 1. If \code{length} is specified the \code{step}
argument is ignored.}

\item{length}{An alternative to \code{step}, a number specifying how many values
the range input has. Defaults to \code{NULL}, in which case \code{step} is used.}

\item{default}{The default value of the range input. Defaults to \code{NULL} in
which case the default value is midway between the minium and maximum
values.}

\item{labels}{A character vector of two labels or a list of two tag elements
to use as labels for the minimum and maximum of the range. Defaults to
\code{NULL} in which case \code{min} and \code{max} are used as the labels.}

\item{context}{One of \code{"primary"}, \code{"secondary"}, \code{"success"}, \code{"info"},
\code{"warning"}, or \code{"danger"} specifying the visual context of the range
input. Defaults to \code{NULL} in which case a visual context is not applied.

\strong{Note}: On Chrome the entire range input is colored according to the
context. On Firefox and Internet Explorer the lower half of the range input
is colored according to the context. In the future, Chrome may support
better styling.}

\item{size}{One of \code{"small"} or \code{"large"} specifying a size transformation of
the range input. Defaults to \code{NULL} in which case the size of the range
input is not modified.}

\item{track}{The corresponding CSS is not working.}

\item{thumb}{One of \code{"square"} or \code{"rounded"} specifying the appearance of
the thumb. Defaults to \code{NULL} in which case the thumb is circular.}
}
\description{
Create a range input. A range input allows a user fine control over a
bounded value, think volume control.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          rangeInput(
            id = "rangelg",
            size = "large"
          ),
          rangeInput(
            id = "rangemd",
            default = 60
          ),
          rangeInput(
            id = "rangesm",
            size = "small"
          )
        ),
        col(
          tags$h6("Large range"),
          verbatimTextOutput("valuelg"),
          tags$h6("Medium range"),
          verbatimTextOutput("valuemd"),
          tags$h6("Small range"),
          verbatimTextOutput("valuesm")
        )
      )
    ),
    server = function(input, output) {
      output$valuelg <- renderPrint({
        input$rangelg
      })

      output$valuemd <- renderPrint({
        input$rangemd
      })

      output$valuesm <- renderPrint({
        input$rangesm
      })
    }
  )
}

if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          rangeInput(
            id = "range1",
            context = "primary",
            labels = c("Minimum", "Maximum"),
            step = 0.01
          ),
          rangeInput(
            id = "range2",
            context = "warning",
            default = 0
          ),
          rangeInput(
            id = "range3",
            length = 5,
            context = "info"
          )
        ),
        col(
          tags$h6("Primary range"),
          verbatimTextOutput("primary"),
          tags$h6("Warning range"),
          verbatimTextOutput("warning"),
          tags$h6("Info range"),
          verbatimTextOutput("info")
        )
      )
    ),
    server = function(input, output) {
      output$primary <- renderPrint({
        input$range1
      })

      output$warning <- renderPrint({
        input$range2
      })

      output$info <- renderPrint({
        input$range3
      })
    }
  )
}

}
