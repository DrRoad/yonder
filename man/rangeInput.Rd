% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/range.R
\name{rangeInput}
\alias{rangeInput}
\alias{intervalInput}
\title{A range input}
\usage{
rangeInput(id, min = 0, max = 100, default = min, step = 1,
  ticks = TRUE, labels = 4, snap = FALSE, prefix = NULL,
  suffix = NULL, context = "secondary")

intervalInput(id, min = 0, max = 100, default = c(min, max), step = 1,
  draggable = FALSE, ticks = TRUE, labels = 4, snap = FALSE,
  prefix = NULL, suffix = NULL, context = "secondary")
}
\arguments{
\item{id}{A character string specifying the id of the range input or \code{NULL}.}

\item{min}{A number specifying the minimum value of the range input, defaults
to \code{0}.}

\item{max}{A number specifying the maximum value of the range input, defaults
to \code{100}.}

\item{default}{A numeric vector between \code{min} and \code{max} specifying the
default value of the range input.

For \strong{rangeInput}, a single number, defaults to \code{min}.

For \strong{intervalInput}, a vector of two numbers specifying the minimum and
maximum of the slider interval, defaults to \code{c(min, max)}.}

\item{step}{A number specifying the interval step of the range input,
defaults to \code{1}.}

\item{ticks}{One of \code{TRUE} or \code{FALSE} specifying if tick marks are added to
the range input, defaults to \code{FALSE}. If \code{TRUE} tick marks are added,
otherwise if \code{FALSE} tick marks are not added.}

\item{labels}{A number specifying how many ticks are labeled, defaults to
\code{4}. If \code{snap} is \code{TRUE}, this argument is ignored and tick labels are
based on \code{step}.}

\item{snap}{One of \code{TRUE} or \code{FALSE} specifying how the range input tick
marks are labeled, defaults to \code{FALSE}. If \code{TRUE} the range input tick
marks are adjusted to align with a multiple of \code{step}. If \code{FALSE} the range
input tick marks are calculeted using \code{labels}.}

\item{prefix}{A character string specifying a prefix for the range input
slider value. Defaults to \code{NULL}, in which case a prefix is not prepended.}

\item{suffix}{A character string specifying a suffix for the range input
slider value. Defaults to \code{NULL}, in which case a prefix is not appended.}

\item{context}{One of \code{"primary"}, \code{"secondary"}, \code{"success"}, \code{"info"},
\code{"warning"}, or \code{"danger"} specifying the visual context of the slider,
defaults to \code{"secondary"}.}

\item{draggable}{One of \code{TRUE} or \code{FALSE} specifying if the user can drag the
interval between an interval input's two sliders defaults to \code{FALSE}. If
\code{TRUE} the user can drag the entire range, otherwise the interval is not
draggable.}
}
\description{
A take on shiny's \code{sliderInput}.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      rangeInput("default"),
      rangeInput("blue", context = "primary"),
      rangeInput("red", context = "danger"),
      rangeInput("white", context = "info", step = 10, snap = TRUE),
      rangeInput("yellow", context = "warning", prefix = "$", suffix = ".00")
    ),
    server = function(input, output) {

    }
  )
}
if (interactive()) {
  shinyApp(
    ui = container(
      intervalInput("gray"),
      intervalInput("green", default = c(25, 75), draggable = TRUE)
    ),
    server = function(input, output) {

    }
  )
}
}
