% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/range.R
\name{rangeInput}
\alias{rangeInput}
\title{A range or slider input}
\usage{
rangeInput(id, min = 0, max = 100, step = 1, length = NULL,
  default = NULL, labels = NULL, context = NULL, size = NULL,
  track = NULL, thumb = NULL)
}
\arguments{
\item{id}{A character string specifying the id of the range input.}

\item{min}{The minimum value of the range.}

\item{max}{The maxmium value of the range.}

\item{step}{Controls possible values, the values of the range input are
multiples of \code{step}. Defaults to \code{1}. If \code{length} is specified the \code{step}
argument is ignored.}

\item{length}{An alternative to \code{step}, a number specifying how many values
the range input has. Defaults to \code{NULL}, in which case \code{step} is used.}

\item{default}{The default value of the range input. Defaults to \code{NULL} in
which case the default value is midway between the minium and maximum
values.}

\item{labels}{A character vector of two labels or a list of two tag elements
to use as labels for the minimum and maximum of the range. Defaults to
\code{NULL} in which case \code{min} and \code{max} are used as the labels.}

\item{context}{One of \code{"primary"}, \code{"secondary"}, \code{"success"}, \code{"info"},
\code{"warning"}, or \code{"danger"} specifying the visual context of the range
input.

\strong{Note}: On Chrome the entire range input is colored according to the
context. On Firefox and Internet Explorer the lower half of the range input
is colored according to the context.}

\item{thumb}{One of \code{"square"} or \code{"rounded"} specifying the appearance of
the thumb. Defaults to \code{NULL} in which case the thumb is circular.}
}
\description{
Create a range input.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          class = "col col-4 mx-auto",
          rangeInput(
            id = "baz",
            size = "large"
          ),
          rangeInput(
            id = "foo",
            default = 60
          ),
          rangeInput(
            id = "bar",
            size = "small"
          )
        )
      )
    ),
    server = function(input, output) {

    }
  )
}

if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          rangeInput(
            id = "range1",
            context = "primary",
            labels = c("Minimum", "Maximum")
          ),
          rangeInput(
            id = "range2",
            context = "warning"
          ),
          rangeInput(
            id = "range3",
            length = 4,
            context = "info"
          )
        ),
        col(
        )
      )
    ),
    server = function(input, output) {

    }
  )
}

}
