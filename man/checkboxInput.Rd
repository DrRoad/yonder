% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkbox.R
\name{checkboxInput}
\alias{checkboxInput}
\title{Checkbox inputs}
\usage{
checkboxInput(id, choice, value = choice, checked = FALSE, ...)
}
\arguments{
\item{id}{A character string specifying the id of the checkbox input, the
reactive value of the checkbox input is available to the shiny server
function as part of the \code{input} object.}

\item{choice}{A character string specifying a label for the checkbox.}

\item{value}{A character string, object to coerce to a character string, or
\code{NULL} specifying the value of the checkbox or a new value for the
checkbox, defaults to \code{choice}.}

\item{checked}{If \code{TRUE} the checkbox renders in a checked state, defaults
to \code{FALSE}.}

\item{...}{Additional named arguments passed as HTML attributes to the parent
element.}
}
\description{
A reactive checkbox input. When a checkbox input is unchecked the reactive
value is \code{NULL}. When checked the checkbox input reactive value is \code{value}.
}
\examples{

checkboxInput(
  id = "pellentesque",
  choice = "Cras placerat accumsan nulla"
)


if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          checkboxInput(
            id = "checkbox",
            choice = "Are you there?",
            value = "yes"
          ),
          checkboxInput(
            id = "hello",
            choice = "Hello"
          )
        ),
        col(
          d4(
            textOutput("value")
          )
        )
      )
    ),
    server = function(input, output) {
      output$value <- renderText({
        input$checkbox
      })
    }
  )
}


if (interactive()) {
  shinyApp(
    ui = container(
      checkboxInput("foo", "Hello, world!", "hello"),
      textOutput("checkvalue", inline = TRUE),
      textInput("label", placeholder = "New checkbox text"),
      textInput("value", placeholder = "New checkbox value"),
      tags$div(
        buttonInput("choices", "Update checkbox text"),
        buttonInput("values", "Update checkbox value")
      ) \%>\%
        display("flex")
    ),
    server = function(input, output) {
      output$checkvalue <- renderPrint({
        if (is.null(input$foo)) {
          markInvalid("foo", "Please check")
        } else {
          markValid("foo")
        }

        input$foo
      })

      observeEvent(input$choices, {
        req(input$label)
        updateChoices("foo", hello = input$label)
      })

      observeEvent(input$values, {
        req(input$value, input$foo)
        updateValues("foo", !!(input$foo) := input$value)
      })
    }
  )
}

}
\seealso{
Other inputs: \code{\link{buttonGroupInput}},
  \code{\link{buttonInput}}, \code{\link{dateInput}},
  \code{\link{formInput}}, \code{\link{groupInput}},
  \code{\link{radioInput}}, \code{\link{selectInput}},
  \code{\link{textInput}}
}
\concept{inputs}
