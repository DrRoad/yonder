% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/progress.R
\name{progress}
\alias{progress}
\alias{progressbar}
\alias{bar}
\alias{renderBar}
\title{Progress bars}
\usage{
progress(...)

bar(value = 0, label = NULL, context = NULL, striped = FALSE,
  animated = FALSE, ...)

renderBar(value, label = NULL, env = parent.frame(), quoted = FALSE)
}
\arguments{
\item{...}{\code{bar} elements passed to progress or named arguments passed as
HTML attributes to the respective parent element.}

\item{value}{An integer(s), between 0 and 100, specifying the initial
value(s) of a progress bar or components of a progress bar, defaults to 0.}

\item{label}{Label(s) for a progress bar or components of a progress bar,
defaults to \code{NULL}.}

\item{context}{Used to specify the visual context of the progress bar,
\code{"success"}, \code{"info"}, \code{"warning"} or \code{"danger"}.}

\item{striped}{If \code{TRUE}, the progress bar has a striped gradient, defaults
to \code{FALSE}.}

\item{animated}{If \code{TRUE}, the progress bar is animated and \code{striped} is set
to \code{TRUE}, defaults to \code{FALSE}.}
}
\description{
Create simple or composite progress bars. To create a composite progress bar
pass multiple calls to \code{bar} to \code{progress}. Each \code{bar} component may have its
own \code{id} argument, value, label, and context.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      progress(
        bar(id = "clicks", value = 0)
      ),
      buttonInput(id = "inc", "Increment progress")
    ),
    server = function(input, output, session) {
      clickPercentage <- reactive({
         min(input$inc$count, 10) / 10 * 100
      })

      output$clicks <- renderBar(
        value = clickPercentage(),
        label = {
          cp <- clickPercentage()
          if (cp > 0) {
            paste0(cp, "\%")
          }
        }
      )
    }
  )
}

}
