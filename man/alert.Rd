% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alerts.R
\name{alert}
\alias{alert}
\alias{renderAlert}
\title{Alerts}
\usage{
alert(text = NULL, heading = NULL, context = NULL, hidden = TRUE,
  dismissible = TRUE, icon = NULL, ...)

renderAlert(show = NULL, env = parent.frame(), quoted = FALSE)
}
\arguments{
\item{text}{A character string or tagList}

\item{heading}{A character vector specifying text to use as a heading for the
alert, defaults to \code{NULL}.

\code{h4} is the default heading tag. To use a different heading level tag one
may specify custom HTML. Be sure to include the HTML class \code{alert-heading},
e.g. \code{tags$h3(class = "alert-heading", "Level 3 Heading")}.}

\item{context}{Used to specify the visual context of the alert, one of
\code{"success"}, \code{"info"}, \code{"warning"}, or \code{"danger"}, defaults to \code{NULL}.

Alerts for success are green, informative alerts are blue, warning alerts
are yellow, and alerts for danger are red.}

\item{hidden}{If \code{TRUE}, the alert renders in an invisible state and may be
toggled into a visible state using \code{renderAlert}, defaults to \code{TRUE}.}

\item{dismissible}{If \code{TRUE}, the alert includes a button to dismiss the
alert, defaults to \code{TRUE}.}

\item{icon}{An optional alternate icon to use as the dismiss button, see
\code{\link{icons}}, defaults to \code{NULL}.}

\item{...}{Additional named arguments passed as HTML attributes to the alert
element.}

\item{show}{An expression which returns \code{TRUE}, \code{FALSE}, or \code{NULL}. When
\code{TRUE} the alert toggles to a shown state, when \code{FALSE} the alert toggles
to a invisible state, and finally a return value of \code{NULL} holds the
alert in its current state.

It is important to note that once an alert is dismissed the alert element
is removed from the page. Thus, the rendering function, no matter the
return value, no longer has an effect. To avoid this funcationality set
\code{dismissible} to \code{FALSE}.}
}
\description{
Provide the user with feedback with custom alert dialogs.
}
\details{
As an input, an alert will return \code{TRUE} when it is dismissed, otherwise its
input value remains \code{NULL}.

As an ouput, an alert may be hidden or shown using \code{renderAlert}.
}
\examples{

if (interactive()) {
  library(shiny)

  shinyApp(
    ui = container(
      alert(
        id = "popup",
        text = "Hey! We even asked nicely.",
        context = "info",
        icon = icons$fa("check")
      ),
      button(id = "show", "Don't click me, please")
    ),
    server = function(input, output) {
      output$popup <- renderAlert({
        input$show$count \%\% 2
      })
    }
  )
}

if (interactive()) {
  library(shiny)

  shinyApp(
    ui = container(
      alert(id = "alert", "Test alert")
    ),
    server = function(input, output) {
      output$alert <- renderAlert(TRUE)

      output$alert2 <- renderAlert(TRUE)

      observeEvent(input$alert, {
        print(input$alert)
      })
    }
  )
}

}
