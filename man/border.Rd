% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{border}
\alias{border}
\title{Tag element borders}
\usage{
border(tag, color = NULL, sides = "all")
}
\arguments{
\item{tag}{A tag element.}

\item{color}{A character string specifying the border color, defaults to
\code{NULL}, in which case the browser default is used. See below for possible
border colors.}

\item{sides}{One or more of \code{"top"}, \code{"right"}, \code{"bottom"}, \code{"left"} or
\code{"all"} or \code{"none"} specifying which sides to add a border to, defaults to
\code{"all"}.}
}
\description{
Use \code{border()} to add borders to a tag element or change the color of a tag
element's border.
}
\details{
The following border colors are available,
\itemize{
\item red
\item purple
\item indigo
\item blue
\item cyan
\item teal
\item green
\item yellow
\item amber
\item orange
\item grey
\item white
}
}
\examples{

h1("") \%>\%
  border("grey")


div("Vivamus id enim.") \%>\%
  border("orange")

if (interactive()) {
  colors <- c(
    "red", "purple", "indigo", "blue", "cyan", "teal", "green",
    "yellow", "amber", "orange", "grey", "white"
  )

  shinyApp(
    ui = container(
      fluid = FALSE,
      lapply(
        colors,
        border,
        tag = div() \%>\%
          padding(5) \%>\%
          margins(2)
      )
    ) \%>\%
      display("flex") \%>\%
      flex(wrap = TRUE),
    server = function(input, output) {

    }
  )
}

}
\seealso{
Other utilities: \code{\link{affix}},
  \code{\link{background}}, \code{\link{display}},
  \code{\link{float}}, \code{\link{font}},
  \code{\link{padding}}, \code{\link{rounded}},
  \code{\link{text}}, \code{\link{width}}
}
\concept{utilities}
