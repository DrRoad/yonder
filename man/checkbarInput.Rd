% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bars.R
\name{checkbarInput}
\alias{checkbarInput}
\alias{radiobarInput}
\title{Check- and radiobar inputs}
\usage{
checkbarInput(id, choices, values = choices, selected = NULL)

radiobarInput(id, choices, values = choices, selected = NULL)
}
\arguments{
\item{id}{A character string specifying the id of the check- or radiobar
input.}

\item{choices}{A character vector or flat list of character strings
specifying the labels of the check- or radiobar options.}

\item{values}{A character vector, flat list of character strings, or object
to coerce to either, specifying the values of the check- or radiobar
options, defaults to \code{choices}.}

\item{selected}{One or more of \code{values} indicating which of the check- or
radiobar options are selected by default, defaults to \code{NULL}, in which case
there is no default option.}
}
\description{
Checkbar and radiobar inputs behave like the counter parts, checkbox and
radio inputs. The -bar inputs are a stylistic variation. However, dull
checkbox inputs are singletons, thus the checkbar input is more akin to
shiny's checkbox group input.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          checkbarInput(
            id = "lightblue",
            choices = c(
              "Check 1",
              "Check 2",
              "Check 3"
            ),
            selected = "Check 1"
          ) \%>\%
            background("light-blue", 1) \%>\%
            margins(2),
         checkbarInput(
            id = "indigo",
            choices = c(
              "Check 1",
              "Check 2",
              "Check 3"
            ),
            selected = "Check 2"
          ) \%>\%
            background("indigo", 1) \%>\%
            margins(2)
        ),
        col(
          verbatimTextOutput("values")
        )
      )

    ),
    server = function(input, output) {
      output$values <- renderPrint({
        list(
          `light-blue` = input$lightblue,
          indigo = input$indigo
        )
      })
    }
  )
}

if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          radiobarInput(
            id = "radiobar",
            choices = c(
              "Radio 1",
              "Radio 2",
              "Radio 3"
            ),
            selected = "Radio 1"
          )
        ),
        col(
          verbatimTextOutput("value")
        )
      )

    ),
    server = function(input, output) {
      output$value <- renderPrint({
        input$radiobar
      })
    }
  )
}

}
