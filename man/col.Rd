% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/container.R
\name{col}
\alias{col}
\alias{row}
\alias{container}
\title{Grid ystem and esponsive layout}
\usage{
col(..., width = NULL, offset = NULL, align = NULL, order = NULL)

row(..., align = NULL, justify = NULL, gutters = TRUE)

container(..., fluid = TRUE)
}
\arguments{
\item{...}{Child elements of the \code{container}, \code{row}, or \code{col} parent element
or additional named arguments passed as HTML attributes or additional
classes to the respective parent element.}

\item{width}{1 through 12 or \code{"auto"}, defaults to \code{NULL}, alternate widths
for different viewports may be specified using a named multi-length vector
or list, see details section.

If the width of multiple columns totals more than 12, columns are greedily
wrapped into multiple rows.

If \strong{\code{"auto"}}, then the column fits to the width of the content.

If \strong{\code{NULL}}, the column will fit to its parent container. When multiple
columns have a \code{NULL} width, the parent element width is divided equally
amongst all such columns. For example, two columns for which \code{width} is
\code{NULL} will split their parent container's width equally in two.}

\item{offset}{1 through 12, defaults to \code{NULL}, alternate offsets for
different viewports may be specified using a named multi-length vector
or list, see details section. Use \code{offset} to move columns to the right by
increasing the left margin of the column.}

\item{align}{Vertical alignment of a row's columns or a particular column,
one of \code{"start"}, \code{"center"}, or \code{"end"}, defaults to \code{NULL} in which case
no vertical alignment is applied.

If \strong{\code{"start"}}, the column or children columns align to top of row.

If \strong{\code{"center"}}, the column or children columns align to middle of row.

If \strong{\code{"end"}}, the column or children columns align to bottom of row.}

\item{order}{One of \code{"first"}, \code{"last"}, or \code{"unordered"}, defaults to
\code{NULL}. A column marked as \code{"first"} is \emph{visually} rearranged and appears
as the first column in its row. A column marked as \code{"last"} is \emph{visually}
rearranged and appears as the last column in its row.}

\item{justify}{Horizontal alignment of row columns, one of \code{"start"},
\code{"end"}, \code{"center"}, \code{"between"}, or \code{"around"}, defaults to \code{NULL} in
which case no horizontal alignment is applied.

If \strong{\code{"start"}}, children columns align to left side of row.

If \strong{\code{"end"}}, children columns align to right side of row.

If \strong{\code{"center"}}, children columns align to center side of row.

If \strong{\code{"between"}}, children columns are spread out equally across the width of
the row, columns on the far left and right are flush with the edge of
the row.

If \strong{\code{"around"}}, children columns are spread equally across the width of the
container, padding is added between columns and the edges of the parent row.}

\item{gutters}{Defaults to \code{TRUE}, children columns receive horizontal
padding for aesthetic spacing, to remove this padding specify \code{gutters} as
\code{FALSE}.}

\item{fluid}{If \code{TRUE}, the container is a fluid container and fits to the
entire width of the viewport, defaults to \code{TRUE}.}
}
\description{
Flexbox, grid layout, containers, rows, and columns (oh my). Arguments \code{width} and
\code{order} can be applied depending on the width of the page, see the details
section for more information.
}
\details{
One can specify alternate column offsets or widths for different viewports by
using the following naming convention. A specific offset or width will be
applied when the viewport is \strong{at least} the corresponding size, see below.
\itemize{
\item \strong{unnamed}, applies to all viewports.
\item \strong{\code{sm}}, at least 576 pixels wide.
\item \strong{\code{md}}, at least 768 pixels wide.
\item \strong{\code{lg}}, at least 992 pixels wide.
\item \strong{\code{xl}}, at least 1200 pixels wide.
}

See examples for more on how to make use of this functionality.
}
\examples{
# A column that,
#   - always has a width of 3
#   - is always offset by 3
col(
  width = 3,
  offset = 3
)

# A column that,
#   - when viewport is small width is 2 and no offset
#   - when viewport is large width is 4 and offset is 3
col(
  width = c(sm = 2, lg = 4),
  offset = c(sm = 0, lg = 3)
)

# A column that,
#   - always fits to its content
#   - has no offset up to medium
#   - when the viewport is medium offset is 2
#   - when the viewport is large offset is 3
#   - when the viewport is extra large offset is 5
col(
  width = "auto",
  offset = c(md = 2, lg = 3, xl = 5)
)

# A column that,
#   - is 12 units wide (full width of parent) until medium viewport
#   - at medium viewport the column fits to the content
col(
  width = c(12, md = "auto")
)

}
\seealso{
For more information on and examples of containers, rows, and the grid
layout, please refer to the bootstrap
\href{https://v4-alpha.getbootstrap.com/layout/grid}{grid system page}.
}
