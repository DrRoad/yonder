% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/download.R
\name{downloadEvent}
\alias{downloadEvent}
\title{Trigger a download}
\usage{
downloadEvent(event, filename, handler, domain = getDefaultReactiveDomain())
}
\arguments{
\item{event}{A reactive input value (e.g. \code{input$click}), a call to a
reactive expression, or a new expression inside curly braces. When \code{event}
is triggered the file download is triggered.}

\item{filename}{A reactive input value, a call to a reactive expression, a
function, or a new expression inside curly braces which returns a string
specifying the name of the downloaded file.}

\item{handler}{A \strong{function} with one argument that is expected to write the
content of the downloaded file. A temporary file is passed to the function,
which is expected to write content (text, images, etc.) to the temporary
file.}

\item{domain}{A shiny session object, defaults to
\code{\link[=getDefaultReactiveDomain]{getDefaultReactiveDomain()}}.}
}
\description{
An alternative to \code{downloadLink} and \code{downloadHelper}. \code{downloadEvent} allows
a custom reactive event to trigger a download. Thus, a single handler may be
used for a complex reactive input or widget.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      textInput("name", "File name"),
      buttonInput("trigger", "Download")
    ),
    server = function(input, output) {
      downloadEvent(input$trigger, {
        if (is.null(input$name)) {
          "default"
        } else {
          input$name
        }
      }, function(file) {
        cat("hello, world!", file = file)
      })
    }
  )
}

}
