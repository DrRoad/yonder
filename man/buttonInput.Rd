% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/button.R
\name{buttonInput}
\alias{buttonInput}
\alias{updateButtonInput}
\alias{disableButtonInput}
\alias{enableButtonInput}
\alias{resetButtonInput}
\alias{submitInput}
\title{Button and submit inputs}
\usage{
buttonInput(id, label, block = FALSE, disabled = FALSE, ...)

updateButtonInput(id, label, session = getDefaultReactiveDomain())

disableButtonInput(id, session = getDefaultReactiveDomain())

enableButtonInput(id, session = getDefaultReactiveDomain())

resetButtonInput(id, session = getDefaultReactiveDomain())

submitInput(label = "Submit", block = FALSE, disabled = FALSE, ...)
}
\arguments{
\item{id}{A character string specifying the id of the button input.}

\item{label}{A character string specifying the label text on the button
input.}

\item{block}{If \code{TRUE}, the input is block-level instead of inline, defaults
to \code{FALSE}. A block-level element will occupy the entire width of its
parent element.}

\item{disabled}{If \code{TRUE}, the input renders in a disabled state, defaults
to \code{FALSE}.}

\item{...}{Additional named arguments passed as HTML attributes to the parent
element.}
}
\description{
Button inputs are useful as triggers for reactive or observer expressions.
The reactive value of a button input is the number of times it has been
clicked.

A submit input is a special type of button used to control HTML form
submission. Unlike shiny's \code{submitButton}, \code{submitInput} will not freeze all
reactive inputs.
}
\details{
A submit input is automatically included as part of a \code{\link{formInput}}.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          buttonInput(
            id = "button",
            label = "Click me!"
          ) \%>\%
            background("green")
        ),
        col(
          d4(
            textOutput("clicks")
          )
        )
      )
    ),
    server = function(input, output) {
      output$clicks <- renderText({
        input$button
      })
    }
  )
}

if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          buttonInput(
            id = "change",
            text = "Change other button"
          )
        ),
        col(
          buttonInput(
            id = "button",
            text = "Button",
            outline = TRUE
          )
        ),
        col(
          d4(
            textOutput("value")
          )
        )
      )
    ),
    server = function(input, output) {
      observeEvent(input$change, {
        updateButtonInput(
          id = "button",
          text = paste("Button", input$change)
        )

        resetButtonInput("button")
      })

      output$value <- renderText({
        input$button
      })
    }
  )
}

if (interactive()) {
  shinyApp(
    ui = container(
      fluid = FALSE,
      buttonInput(
        id = "button",
        label = list(
          "Increment badge",
          badgeOutput(
            id = "badge",
            content = 0
          ) \%>\%
            background("green")
        )
      ) \%>\%
        background("amber")
    ),
    server = function(input, output) {
      output$badge <- renderBadge({
        input$button
      })
    }
  )
}

}
\seealso{
Bootstrap 4 button documentation:
\url{https://getbootstrap.com/docs/4.0/components/buttons/}

Other inputs: \code{\link{checkboxInput}},
  \code{\link{formInput}}, \code{\link{groupInput}},
  \code{\link{radioInput}}, \code{\link{selectInput}},
  \code{\link{textInput}}
}
