% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list-group.R
\name{listGroupInput}
\alias{listGroupInput}
\title{List group inputs}
\usage{
listGroupInput(id, choices, values = choices, selected = NULL, ...,
  multiple = TRUE, flush = FALSE)
}
\arguments{
\item{id}{A character string specifying the reactive id of the input.}

\item{choices}{A vector of character strings or list of tag elements specifying
the content of the list group's items.}

\item{values}{A character vector specifying the values of the list items,
defaults to \code{choices}.}

\item{selected}{One or more of \code{values} specifying which choices are selected
by default, defaults to \code{NULL}, in which case no choice is selected.}

\item{...}{Additional named arguments passed as HTML attributes to the parent element.}

\item{multiple}{One of \code{TRUE} or \code{FALSE} specifyng if multiple list group
items may be selected, defaults to \code{TRUE}.}

\item{flush}{One of \code{TRUE} or \code{FALSE} specifying if the list group is
rendered without an outside border, defaults to \code{FALSE}. Removing the list
group border is useful when rendering a list group inside a custom parent
container, e.g. inside a \code{\link[=card]{card()}}.}
}
\description{
List group inputs are an actionable list of items. They behave similarly to
checkboxes or radios, that is, users may select one or more items from the
list. However, list group items may include highly variable content.
}
\section{Complex list items}{


The following application demonstrates the flexibility of a list
group input. Here each list item contains a collasible pane. We
can hook up the server such that selecting a list item expands the
corresponding collapsible pane.\preformatted{lessons <- list(
  stars = c(
    "The stars and moon are far too bright",
    "Their beam and smile splashing o'er all",
    "To illuminate while turning sight",
    "From shadows wherein deeper shadows fall"
  ),
  joy = c(
    "A single step, her hand aloft",
    "More than a step, a joyful bound",
    "The moment, precious, small, soft",
    "And within a truth was found"
  )
)

ui <- container(
  listGroupInput(
    id = "poems",
    multiple = FALSE,
    choices = list(
      list(
        h5("Stars"),
        collapsiblePane(
          id = "stars",
          lapply(lessons[["stars"]], tags$p)
        )
      ),
      list(
        h5("Joy"),
        collapsiblePane(
          id = "joy",
          lapply(lessons[["joy"]], tags$p)
        )
      )
    ),
    values = c("stars", "joy")
  )
)

server <- function(input, output) {
  observeEvent(input$poems, {
    if (input$poems == "stars") {
      collapsePane("joy")
      expandPane("stars")
    } else {
      collapsePane("stars")
      expandPane("joy")
    }
  })
}

shinyApp(ui, server)
}
}

\section{Navigation with a list group}{


A list group can also control a set of panes. Be sure to set \code{multiple = FALSE}. This layout is reminiscent of a table of contents.\preformatted{ui <- container(
  columns(
    column(
      width = 3,
      listGroupInput(
        id = "nav",
        multiple = FALSE,
        selected = "pane1",
        choices = c(
          "Item 1",
          "Item 2",
          "Item 3"
        ),
        values = c(
          "pane1",
          "pane2",
          "pane3"
        )
      )
    ),
    column(
      navContent(
        navPane(
          id = "pane1",
          p("Pellentesque tristique imperdiet tortor.")
        ),
        navPane(
          id = "pane2",
          p("Sed bibendum. Donec pretium posuere tellus.")
        ),
        navPane(
          id = "pane3",
          p("Pellentesque tristique imperdiet tortor.")
        )
      )
    )
  )
)

server <- function(input, output) {
  observeEvent(input$nav, {
    showPane(input$nav)
  })
}

shinyApp(ui, server)
}
}

\examples{

### A simple list group

# This list group is not actionable as `id` is `NULL`.

listGroupInput(
  id = NULL,
  choices = paste("Item", 1:5)
)

## An actionable list group

# In this example we specify an `id` thus creating an actionable list group.

listGroupInput(
  id = "list1",
  choices = paste("Item", 1:5)
)

## List group within a card

card(
  header = h6("Pick an item"),
  listGroupInput(
    id = "list2",
    flush = TRUE,
    choices = paste("Item", 1:5),
  )
)

}
\seealso{
Other inputs: \code{\link{buttonGroupInput}},
  \code{\link{buttonInput}}, \code{\link{checkboxInput}},
  \code{\link{fileInput}}, \code{\link{formInput}},
  \code{\link{groupInput}}, \code{\link{menuInput}},
  \code{\link{navInput}}, \code{\link{radioInput}},
  \code{\link{rangeInput}}, \code{\link{selectInput}},
  \code{\link{textInput}}
}
\concept{inputs}
