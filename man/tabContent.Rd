% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nav.R
\name{tabContent}
\alias{tabContent}
\alias{tabPanel}
\title{Create dynamic tabbed content}
\usage{
tabContent(id, labels, ..., style = "tabs", selected = NULL,
  values = labels, ids = NULL)

tabPanel(..., fade = TRUE)
}
\arguments{
\item{id}{A character string specifying the id of the tabbed content. The
reactive value of tabbed content is the label of the currently selected tab
or a custom value if \code{values} is not \code{NULL}.}

\item{labels}{A character vector of labels, one for each tab panel.}

\item{...}{Any number of \code{tabPanel}'s or named attributes passed as HTML
attributes to the parent element.}

\item{style}{One of \code{"tabs"}, \code{"pills"}, or \code{"vertical"} specifying the
visual style of the tabs, defaults to \code{"tabs"}.}

\item{selected}{One of \code{labels} specifying which tab is selected by default,
defaults to \code{NULL}, in which case the first tab is selected by default.}

\item{values}{A character vector specifying the possible values of the tabs,
defaults to \code{labels}. The reactive value of the tabbed content is the
corresponding value of the active tab. Values are matched to tabs by
position.}

\item{ids}{A character vector of ids to use for each tab, defaults to \code{NULL}
in which case ids will be generated.}

\item{fade}{One of \code{TRUE} or \code{FALSE}, if \code{TRUE} the tab pane fades in,
defaults to \code{TRUE}.}
}
\description{
Create tabbable content stylized as tabs, horizontal pills, or vertical
pills. Tab sets or tab panels are distinct from navs.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          default = 3,
          tabContent(
            id = "tabs",
            labels = c("Hello", "Goodnight"),
            tabPanel(
              d4("World")
            ),
            tabPanel(
              d4("Moon")
            )
          )
        ),
        col(
          default = 3,
          tabContent(
            id = "pills",
            style = "pills",
            labels = c("One", "Red"),
            tabPanel(
              d4("fish, two fish")
            ),
            tabPanel(
              d4("fish, blue fish")
            )
          )
        ),
        col(
          tabContent(
            id = "vert",
            style = "vertical",
            labels = c("How", "Brown"),
            tabPanel(
              d4("now")
            ),
            tabPanel(
              d4("cow")
            )
          )
        )
      )
    ),
    server = function(input, output) {

    }
  )
}

if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          tabContent(
            id = "tabs",
            labels = c("One", "Two", "Three"),
            values = c("first tab", "second tab", "third tab"),
            tabPanel(
              "A tab"
            ),
            tabPanel(
              "Another tab"
            ),
            tabPanel(
              "A final tab"
            )
          )
        ),
        col(
          verbatimTextOutput("which")
        )
      )
    ),
    server = function(input, output) {
      output$which <- renderPrint({
        input$tabs
      })
    }
  )
}

}
