% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/radio.R
\name{radioInput}
\alias{radioInput}
\alias{radio}
\alias{updateRadioInput}
\title{Radio inputs}
\usage{
radioInput(..., inline = FALSE, id = NULL)

radio(label = NULL, value = NULL, checked = FALSE, ...)

updateRadioInput(id, context = NULL, disable = NULL,
  session = getDefaultReactiveDomain())
}
\arguments{
\item{...}{Radio controls passed to a radio input or additional named
arguments passed on to the respective parent element as HTML attributes.}

\item{inline}{If \code{TRUE}, the radio input renders inline, otherwise the
radio controls render on separate lines, defaults to \code{FALSE}.}

\item{id}{A character string specifying the id of the radio input, defaults
to \code{NULL}, in which case the radio element is rendered, but a reactive
value is not passed to the shiny server function.}

\item{label}{A character string specifying a label for the radio control,
defaults to \code{NULL}, in which case a label is not added.}

\item{value}{A character string specifying a value for the radio control,
defaults to \code{NULL}, in which case the value of the radio is also \code{NULL}.}

\item{checked}{One of \code{TRUE} or \code{FALSE} specifying if the radio control
renders in a checked state, defaults to \code{FALSE}.}
}
\description{
Create a reactive radio input of one or more radio controls.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          tags$h4("Select a context"),
          radioInput(
            id = "context",
            radio("success", "success"),
            radio("warning", "warning"),
            radio("danger", "danger"),
            radio("none", "none", checked = TRUE)
          )
        ),
        col(
          tags$h4("Pick a number"),
          numberInput(id = "threshold"),
          tags$span(
            class = "text-muted",
            "Numbers greater than 5 may cause problems (try it!)"
          ),
          tags$h4("More choices"),
          radioInput(
            id = "choices",
            radio("Choice 1", 1),
            radio("Choice 2", 2),
            radio("Choice 3", 3),
            radio("Choice 4", 4)
          )
        )
      )
    ),
    server = function(input, output) {
      observe({
        req(input$context)

        updateRadioInput("choices", context = input$context)
      })

      observe({
        req(input$threshold)

        updateRadioInput("choices", disable = input$threshold > 5)
      })
    }
  )

}

}
\seealso{
Other inputs: \code{\link{button}},
  \code{\link{groupInput}}, \code{\link{selectInput}},
  \code{\link{textInput}}
}
