% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/radio.R
\name{radioInput}
\alias{radioInput}
\alias{updateRadioInput}
\alias{validateRadioInput}
\alias{disableRadioInput}
\alias{enableRadioInput}
\title{Radio inputs}
\usage{
radioInput(id, labels, values, selected = NULL, header = NULL,
  footer = NULL, inline = FALSE)

updateRadioInput(id, values, session = getDefaultReactiveDomain())

validateRadioInput(id, state, hint = NULL,
  session = getDefaultReactiveDomain())

disableRadioInput(id, session = getDefaultReactiveDomain())

enableRadioInput(id, session = getDefaultReactiveDomain())
}
\arguments{
\item{id}{A character string specifying the id of the radio input, the
reactive value of the radio input is available to the shiny server
function as part of the \code{input} object.}

\item{labels}{A character vector specifying labels for the radio input's
choices.}

\item{values}{A character vector, list of character strings, vector of values
to coerce to character strings, or list of values to coerce to character
strings specifying the values of the radio input's choices.}

\item{selected}{One of \code{values} indicating the default selected value of the
radio input, defaults to \code{NULL}, in which case the first choice is
selected by default.}

\item{header}{A character string specifying a header for the radio input,
defaults to \code{NULL}, in which case a header is not added.}

\item{inline}{If \code{TRUE}, the radio input renders inline, defaults to \code{FALSE},
in which case the radio controls render on separate lines.}

\item{state}{One of \code{"success"}, \code{"warning"}, or \code{"danger"} indicating the
state of the radio input. If the return value is \code{NULL} any visual context
is removed.}

\item{hint}{A character string specifying hint text to accompany a change in
the input's state, defaults to \code{NULL}. If \code{state} is \code{NULL} then \code{hint}
is ignored.}

\item{...}{Additional named arguments passed as HTML attributes to the parent
element.}
}
\description{
Create a reactive radio input of one or more radio controls.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      row(
        col(
          radioInput(
            id = "state",
            header = "Pick a state",
            labels = list("none", "success", "danger", "warning"),
            values = list(NULL, "success", "danger", "warning"),
            footer = "change the state of the other radio input"
          )
        ),
        col(
          radioInput(
            id = "choices",
            header = "More choices",
            labels = paste("Choice", 1:4),
            values = 1:4,
            footer = "These choices won't do anything yet"
          )
        )
      )
    ),
    server = function(input, output) {
      observe({
        validateRadioInput(
          id = "choices",
          state = input$state,
          hint = paste("visual", input$state)
        )
      })
    }
  )
}

}
\seealso{
Other inputs: \code{\link{buttonInput}},
  \code{\link{groupInput}}, \code{\link{selectInput}},
  \code{\link{textInput}}
}
