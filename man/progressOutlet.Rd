% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/progress.R
\name{progressOutlet}
\alias{progressOutlet}
\alias{bar}
\alias{showBar}
\title{Progress bars}
\usage{
progressOutlet(id, ...)

bar(id, value, label = NULL, striped = FALSE, ...)

showBar(outlet, bar, session = getDefaultReactiveDomain())
}
\arguments{
\item{id}{A character string specifying the id of the progress outlet or
progress bar.

For \strong{bar}, specifying an id allows you to update an existing bar in a
progress outlet with \code{showBar()}. If \code{id} is \code{NULL}, \code{showBar()} will
append instead of replace a progress bar.}

\item{...}{For \strong{progressOutlet}, one or more \code{bar} elements to include by
default.

For \strong{progressOutlet} and \strong{bar}, additional named arguments passed as
HTML attributes to the parent element.}

\item{value}{An integer between 0 and 100 specifying the initial value
of a bar.}

\item{label}{A character string specifying the label of a bar, defaults to
\code{NULL}, in which case a label is not added.}

\item{striped}{If \code{TRUE}, the progress bar has a striped gradient, defaults
to \code{FALSE}.}

\item{outlet}{A character string specifying the id of a progress outlet.}

\item{bar}{A bar element, typically a call to \code{bar()}.}

\item{session}{A reactive context, defaults to \code{\link[=getDefaultReactiveDomain]{getDefaultReactiveDomain()}}.}
}
\description{
Create simple or composite progress bars. To create a composite progress bar
pass multiple calls to \code{bar} to a progress output. Each \code{bar} component has
its own id, value, label, and attributes. Furthermore, utility functions may
be applied to individual bars for added customization.
}
\section{Example application}{
\preformatted{ui <- container(
  progressOutlet("tasks"),
  buttonInput(
    id = "inc",
    "Increment progress"
  ) \%>\%
    margin(top = 3)
) \%>\%
  flex(direction = "column")

server <- function(input, output) {
  observeEvent(input$inc, ignoreInit = TRUE, {
    showBar(
      id = "tasks",
      bar(
        id = "laundry",
        value = min(100, input$inc * 10)
      ) \%>\%
        background("amber")
    )
  })
}

shinyApp(ui, server)
}
}

\examples{

### Striped variant

progressOutlet(
  id = NULL,
  bar(
    id = NULL,
    value = 41,
    striped = TRUE  # <-
  ) \%>\%
    background("blue")
)

### Labeled bars

progressOutlet(
  id = NULL,
  bar(
    id = NULL,
    value = 64,
    label = "Trees planted"  # <-
  ) \%>\%
    background("green")
)

### Multiple bars

progressOutlet(
  id = NULL,  # <- this is typically not NULL
  bar(
    id = NULL,
    value = 40
  ) \%>\%
    background("red"),
  bar(
    id = NULL,
    value = 20
  ) \%>\%
    background("orange")
)

}
\seealso{
Other content: \code{\link{alert}},
  \code{\link{blockquote}}, \code{\link{card}},
  \code{\link{d1}}, \code{\link{dropdown}},
  \code{\link{icon}}, \code{\link{img}},
  \code{\link{jumbotron}}, \code{\link{modal}},
  \code{\link{popover}}, \code{\link{pre}},
  \code{\link{tooltip}}
}
\concept{content}
