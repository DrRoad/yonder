% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/badge.R
\name{badgeOutput}
\alias{badgeOutput}
\alias{renderBadge}
\title{Badge outputs}
\usage{
badgeOutput(content = NULL, context = "default", rounded = FALSE, ...,
  id = NULL)

renderBadge(value, context = NULL, env = parent.frame(), quoted = FALSE)
}
\arguments{
\item{content}{A character string specifying the text or label of the badge,
defaults to \code{NULL}.}

\item{context}{A character string specifying the visual context of the badge,
one of \code{"default"}, \code{"primary"}, \code{"success"}, \code{"info"}, \code{"warning"}, or
\code{"danger"}, defaults to \code{"default"}.}

\item{rounded}{If \code{TRUE} the badge has more rounded corners, defaults to
\code{FALSE}.}

\item{...}{Additional named argument passed on as HTML attributes to the
parent element.}

\item{id}{A character string specifying the id of the badge, defaults to
\code{NULL}. An id must be specified in order to use \code{renderBadge} in the shiny
server function.}
}
\description{
Small highlighted content which scales to its parent's size. Useful for
displaying dynamically changing counts or tickers, drawing attention to new
options, or tagging content.
}
\examples{
if (interactive()) {
  shinyApp(
    ui = container(
      listGroupInput(
        listGroupItem(
          label = "Button clicks",
          badge = badgeOutput(
            id = "clicks",
            content = 0
          )
        )
      ),
      buttonInput(
        id = "clicker",
        "Click here!"
      )
    ),
    server = function(input, output) {
      count <- 0

      output$clicks <- renderBadge(
        content = {
          req(input$clicker)
          count <<- count + 1
          count
        },
        context = {
          if (count > 19) {
            "danger"
          } else if (count > 9) {
            "warning"
          } else {
            "info"
          }
        }
      )
    }
  )
}

}
